{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/juangui/dev/jguixer/jguix-blog/components/Code.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { darcula } from 'react-syntax-highlighter/dist/cjs/styles/prism';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n\nvar Code = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Code, _React$PureComponent);\n\n  var _super = _createSuper(Code);\n\n  function Code() {\n    _classCallCheck(this, Code);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Code, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          language = _this$props.language,\n          value = _this$props.value;\n      return __jsx(SyntaxHighlighter, {\n        language: (language === 'ts' ? 'typescript' : language) || 'typescript',\n        style: darcula,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }\n      }, value);\n    }\n  }]);\n\n  return Code;\n}(React.PureComponent);\n\nexport { Code as default };","map":{"version":3,"sources":["/Users/juangui/dev/jguixer/jguix-blog/components/Code.tsx"],"names":["React","darcula","Prism","SyntaxHighlighter","Code","props","language","value","PureComponent"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,gDAAxB;AACA,SAASC,KAAK,IAAIC,iBAAlB,QAA2C,0BAA3C;;IAEqBC,I;;;;;;;;;;;;;6BAIV;AAAA,wBACqB,KAAKC,KAD1B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,KADX,eACWA,KADX;AAEP,aACE,MAAC,iBAAD;AACE,QAAA,QAAQ,EAAE,CAACD,QAAQ,KAAK,IAAb,GAAoB,YAApB,GAAmCA,QAApC,KAAiD,YAD7D;AAEE,QAAA,KAAK,EAAEL,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGM,KAJH,CADF;AAQD;;;;EAd+BP,KAAK,CAACQ,a;;SAAnBJ,I","sourcesContent":["import React from 'react';\nimport { darcula } from 'react-syntax-highlighter/dist/cjs/styles/prism';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n\nexport default class Code extends React.PureComponent<{\n  language: string;\n  value?: string;\n}> {\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter\n        language={(language === 'ts' ? 'typescript' : language) || 'typescript'}\n        style={darcula}\n      >\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}