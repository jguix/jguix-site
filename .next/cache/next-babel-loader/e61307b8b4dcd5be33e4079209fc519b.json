{"ast":null,"code":"var _jsxFileName = \"/Users/juangui/dev/jguixer/jguix-blog/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { generateRSS } from \"../rssUtil\";\nimport { Markdown } from \"../components/Markdown\";\nimport { loadBlogPosts, loadMarkdownFile } from \"../loader\";\nimport { PostCard } from \"../components/PostCard\";\n\nconst Home = props => {\n  return __jsx(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"Introducing Devii\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"introduction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Introduction to Devii\"), __jsx(Markdown, {\n    source: props.introduction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Features\"), __jsx(\"div\", {\n    className: \"medium-wide\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Markdown, {\n    source: props.features,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"My blog posts\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"This section demonstrates the power of dynamic imports. Every Markdown file under \", __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 22\n    }\n  }, \"/md/blog\"), \" is automatically parsed into a structured TypeScript object and available in the\", \" \", __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"props.posts\"), \" array. These blog post \\\"cards\\\" are implemented in the\", __jsx(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"/components/PostCard.tsx\"), \" component.\"), __jsx(\"div\", {\n    className: \"post-card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, props.posts.map((post, j) => {\n    return __jsx(PostCard, {\n      post: post,\n      key: j,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }\n    });\n  }))), __jsx(\"div\", {\n    className: \"section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Testimonials\"), __jsx(\"blockquote\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, __jsx(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Seems like it might be useful!\")), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"\\u2014 Dan Abramov, taken\", \" \", __jsx(\"a\", {\n    href: \"https://github.com/colinhacks/devii/issues/2\",\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \" \", \"utterly out of context\")))), __jsx(\"div\", {\n    className: \"section alternate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"centered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Get started\"), __jsx(\"a\", {\n    href: \"https://github.com/colinhacks/devii\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: \"fork-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Go to README\"))));\n};\n\nexport default Home;\nexport const getStaticProps = async () => {\n  const introduction = await loadMarkdownFile(\"introduction.md\");\n  const features = await loadMarkdownFile(\"features.md\");\n  const readmeFile = await import(`../${\"README.md\"}`);\n  const readme = readmeFile.default;\n  const posts = await loadBlogPosts(); // comment out to turn off RSS generation during build step.\n\n  await generateRSS(posts);\n  const props = {\n    introduction: introduction.contents,\n    features: features.contents,\n    readme: readme,\n    posts\n  };\n  return {\n    props\n  };\n};","map":{"version":3,"sources":["/Users/juangui/dev/jguixer/jguix-blog/pages/index.tsx"],"names":["Head","generateRSS","Markdown","loadBlogPosts","loadMarkdownFile","PostCard","Home","props","introduction","features","posts","map","post","j","getStaticProps","readmeFile","readme","default","contents"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport { generateRSS } from \"../rssUtil\";\nimport { Markdown } from \"../components/Markdown\";\nimport { PostData, loadBlogPosts, loadMarkdownFile } from \"../loader\";\nimport { PostCard } from \"../components/PostCard\";\n\nconst Home = (props: {\n  introduction: string;\n  features: string;\n  readme: string;\n  posts: PostData[];\n}) => {\n  return (\n    <div className=\"content\">\n      <Head>\n        <title>Introducing Devii</title>\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <div className=\"introduction\">\n        <h1>Introduction to Devii</h1>\n        <Markdown source={props.introduction} />\n      </div>\n\n      <div className=\"section\">\n        <h2>Features</h2>\n        <div className=\"medium-wide\">\n          <Markdown source={props.features} />\n        </div>\n      </div>\n\n      <div className=\"section\">\n        <h2>My blog posts</h2>\n        <p>\n          This section demonstrates the power of dynamic imports. Every Markdown\n          file under <code>/md/blog</code> is automatically parsed into a\n          structured TypeScript object and available in the{\" \"}\n          <code>props.posts</code> array. These blog post \"cards\" are\n          implemented in the\n          <code>/components/PostCard.tsx</code> component.\n        </p>\n        <div className=\"post-card-container\">\n          {props.posts.map((post, j) => {\n            return <PostCard post={post} key={j} />;\n          })}\n        </div>\n      </div>\n\n      <div className=\"section\">\n        <h2>Testimonials</h2>\n        <blockquote>\n          <p>\n            <em>Seems like it might be useful!</em>\n          </p>\n          <p>\n            — Dan Abramov, taken{\" \"}\n            <a\n              href=\"https://github.com/colinhacks/devii/issues/2\"\n              target=\"_blank\"\n            >\n              {\" \"}\n              utterly out of context\n            </a>\n          </p>\n        </blockquote>\n      </div>\n\n      <div className=\"section alternate\">\n        <h2 className=\"centered\">Get started</h2>\n        <a href=\"https://github.com/colinhacks/devii\">\n          <button className=\"fork-button\">Go to README</button>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\nexport const getStaticProps = async () => {\n  const introduction = await loadMarkdownFile(\"introduction.md\");\n  const features = await loadMarkdownFile(\"features.md\");\n  const readmeFile = await import(`../${\"README.md\"}`);\n  const readme = readmeFile.default;\n  const posts = await loadBlogPosts();\n\n  // comment out to turn off RSS generation during build step.\n  await generateRSS(posts);\n\n  const props = {\n    introduction: introduction.contents,\n    features: features.contents,\n    readme: readme,\n    posts,\n  };\n\n  return { props };\n};\n"]},"metadata":{},"sourceType":"module"}